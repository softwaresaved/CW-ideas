<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>software on Collaborations Workshop Ideas &amp; Pitches</title><link>https://softwaresaved.github.io/CW-ideas/tags/software/</link><description>Recent content in software on Collaborations Workshop Ideas &amp; Pitches</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://softwaresaved.github.io/CW-ideas/tags/software/index.xml" rel="self" type="application/rss+xml"/><item><title>How Wrong Is The Research Code Base?</title><link>https://softwaresaved.github.io/CW-ideas/cw20-code-base/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://softwaresaved.github.io/CW-ideas/cw20-code-base/</guid><description>CW20 - 2020-03-31 to 2020-04-02 Alpha - HP1-CW20
How Wrong Is The Research Code Base? Hackday Idea Proposer Dan Hobley
Context / Research Domain General research software development
Problem This is motivated by four observations:
There is a huge legacy science codebase, supporting lots of publications Even professional software developers make errors at 15-50 per 1000 lines of code (McConnell, 2004) Modern software best practice (reviewing, testing, etc.) has only recently begun to penetrate the research software community, broadly defined Without formal testing, only code breaking bugs and those that are obviously wrong are likely to be caught.</description></item></channel></rss>