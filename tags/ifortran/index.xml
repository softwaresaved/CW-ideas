<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ifortran on Collaborations Workshop Ideas &amp; Pitches</title><link>https://softwaresaved.github.io/CW-ideas/tags/ifortran/</link><description>Recent content in ifortran on Collaborations Workshop Ideas &amp; Pitches</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://softwaresaved.github.io/CW-ideas/tags/ifortran/index.xml" rel="self" type="application/rss+xml"/><item><title>iFortran Linter</title><link>https://softwaresaved.github.io/CW-ideas/cw18-ifortran-linter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://softwaresaved.github.io/CW-ideas/cw18-ifortran-linter/</guid><description>Collaborations Workshop 2018 - 2018-03-26 iFortran Linter - Group E - CI9-CW18
Reporter Mark Turner - mail@markdturner.co.uk
Participants Sammie Buzzard, Nikoleta E Glynatsi, Mark Turner, Ed Bennett, Stephen Crouch
Context / Research Domain iFortran does not have useful linting tools and could benefit from syntax highlighting, colour coding and comments and help guides for specific functions and variables.
Problem Have you ever tried to understand, translate, or even refactor Fortran code?</description></item></channel></rss>